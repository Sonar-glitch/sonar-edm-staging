#!/bin/bash
# TIKO Recovery - Preserving Original Implementation
# This script prioritizes your sophisticated local implementation

echo "üöÄ TIKO Recovery - Preserving Your Original Implementation"
echo "========================================================"
echo ""
echo "‚ö†Ô∏è  This recovery prioritizes your sophisticated local TIKO implementation"
echo "    over any basic versions that may have been generated by automated tasks"
echo ""

# Step 1: Create a backup of current state
echo "üìã Step 1: Creating backup of current state..."
git stash push -m "Backup before TIKO recovery - $(date)"

# Step 2: Find your best TIKO implementation branch
echo "üìã Step 2: Locating your original TIKO implementation..."

# Check the most promising branches for your sophisticated implementation
CANDIDATE_BRANCHES=(
    "feature/enhanced-dashboard-ui"
    "clean-working-version" 
    "feature/dashboard-enhancements"
    "feature/taste-page-redesign"
)

BEST_BRANCH=""
BEST_SCORE=0

for branch in "${CANDIDATE_BRANCHES[@]}"; do
    echo "Checking $branch..."
    git checkout "$branch" 2>/dev/null
    
    if [ $? -eq 0 ]; then
        SCORE=0
        
        # Check for sophisticated TIKO components (not basic versions)
        if [ -f "components/EnhancedPersonalizedDashboard.js" ]; then
            # Check if it's sophisticated (has real implementation)
            if grep -q "generateMatchExplanation\|spotifyData\|EventDetailModal" components/EnhancedPersonalizedDashboard.js; then
                SCORE=$((SCORE + 5))
                echo "  ‚úÖ Sophisticated EnhancedPersonalizedDashboard found"
            else
                SCORE=$((SCORE + 1))
                echo "  ‚ö†Ô∏è  Basic EnhancedPersonalizedDashboard found"
            fi
        fi
        
        if [ -f "components/EventDetailModal.js" ]; then
            # Check for sophisticated modal (400+ lines with match explanations)
            LINES=$(wc -l < components/EventDetailModal.js)
            if [ $LINES -gt 300 ] && grep -q "generateMatchExplanation\|matchExplanation\|feedbackSubmitted" components/EventDetailModal.js; then
                SCORE=$((SCORE + 5))
                echo "  ‚úÖ Sophisticated EventDetailModal found ($LINES lines)"
            else
                SCORE=$((SCORE + 1))
                echo "  ‚ö†Ô∏è  Basic EventDetailModal found ($LINES lines)"
            fi
        fi
        
        # Check for other sophisticated components
        [ -f "components/CompactSeasonalVibes.js" ] && SCORE=$((SCORE + 2))
        [ -f "components/CompactSoundCharacteristics.js" ] && SCORE=$((SCORE + 2))
        
        echo "  Score: $SCORE/14"
        
        if [ $SCORE -gt $BEST_SCORE ]; then
            BEST_SCORE=$SCORE
            BEST_BRANCH=$branch
        fi
    fi
done

if [ -z "$BEST_BRANCH" ]; then
    echo "‚ùå No sophisticated TIKO implementation found in branches"
    echo "üí° Checking if your current detached HEAD has the implementation..."
    
    # Check current detached HEAD state
    git checkout HEAD
    if [ -f "components/EnhancedPersonalizedDashboard.js" ] && grep -q "generateMatchExplanation" components/EnhancedPersonalizedDashboard.js; then
        echo "‚úÖ Sophisticated TIKO implementation found in current HEAD!"
        git checkout -b tiko-sophisticated-recovery
        BEST_BRANCH="tiko-sophisticated-recovery"
    else
        echo "‚ùå No sophisticated implementation found. Manual recovery needed."
        exit 1
    fi
else
    echo "‚úÖ Best sophisticated TIKO implementation: $BEST_BRANCH (Score: $BEST_SCORE/14)"
fi

# Step 3: Merge sophisticated implementation to main
echo "üìã Step 3: Deploying sophisticated TIKO implementation..."
git checkout main 2>/dev/null || git checkout master 2>/dev/null
git merge "$BEST_BRANCH" --no-ff -m "Restore sophisticated TIKO implementation from $BEST_BRANCH

This restores the original sophisticated TIKO implementation that was
working before automated task modifications. Includes:
- 400+ line EventDetailModal with match explanations
- Sophisticated dashboard with real Spotify integration  
- Advanced event filtering and recommendation algorithms
- Comprehensive error handling and fallback systems

Overrides any basic implementations that may have been generated."

# Step 4: Update API configuration and deploy
echo "üìã Step 4: Updating configuration and deploying..."
heroku config:set API_BASE_URL=https://sonar-edm-api-v2-064205fd7a26.herokuapp.com --app sonar-edm-user
heroku config:set API_URL=https://sonar-edm-api-v2-064205fd7a26.herokuapp.com --app sonar-edm-user

git push heroku main --force

echo ""
echo "üéâ Sophisticated TIKO Implementation Restored!"
echo "=============================================="
echo ""
echo "Your original sophisticated TIKO implementation has been restored,"
echo "overriding any basic versions that may have been generated."
echo ""
PRODUCTION_URL=$(heroku config:get NEXTAUTH_URL --app sonar-edm-user)
echo "üîó Test your restored sophisticated dashboard:"
echo "   $PRODUCTION_URL/dashboard"
echo ""
echo "‚úÖ Features restored:"
echo "   - Sophisticated EventDetailModal with match explanations"
echo "   - Advanced dashboard with real Spotify integration"
echo "   - Enhanced event filtering and recommendations"
echo "   - Comprehensive error handling"